const claimService = require('../services/claimService');

// GET /api/claims?status=APPROVED&email=user@example.com
exports.getClaims = async (req, res) => {
  try {
    const { status, email } = req.query;
    const filters = {};

    if (status) filters.status = status.toUpperCase();
    if (email) filters.email = email.toLowerCase();

    const claims = await claimService.getClaims(filters);
    res.status(200).json(claims);
  } catch (error) {
    console.error('❌ Error fetching claims:', error.message);
    res.status(500).json({ error: 'Server error while fetching claims' });
  }
};

// POST /api/claims
exports.submitClaim = async (req, res) => {
  try {
    const newClaim = await claimService.submitClaim(req.body, req.files);
    res.status(201).json({ message: 'Claim submitted successfully!', data: newClaim });
  } catch (error) {
    console.error('❌ Claim submission failed:', error.message);
    res.status(500).json({ error: 'Internal server error' });
  }
};

// PUT /api/claims/:id/approve
exports.agentApprove = async (req, res) => {
  try {
    const updatedClaim = await claimService.updateAgentStatus(req.params.id, 'APPROVED');
    if (!updatedClaim) return res.status(404).json({ error: 'Claim not found' });
    res.status(200).json({ message: 'Claim approved', data: updatedClaim });
  } catch (error) {
    console.error('❌ Error approving claim:', error.message);
    res.status(500).json({ error: 'Server error while approving claim' });
  }
};

// PUT /api/claims/:id/reject
exports.agentReject = async (req, res) => {
  try {
    const { rejectionReason } = req.body;
    if (!rejectionReason || rejectionReason.trim() === '') {
      return res.status(400).json({ error: 'Rejection reason is required' });
    }

    const updatedClaim = await claimService.updateAgentStatus(req.params.id, 'REJECTED', rejectionReason);
    if (!updatedClaim) return res.status(404).json({ error: 'Claim not found' });
    res.status(200).json({ message: 'Claim rejected', data: updatedClaim });
  } catch (error) {
    console.error('❌ Error rejecting claim:', error.message);
    res.status(500).json({ error: 'Server error while rejecting claim' });
  }
};

// PUT /api/claims/:id/admin-approve
exports.adminApprove = async (req, res) => {
  try {
    const updatedClaim = await claimService.updateAdminStatus(req.params.id, 'ADMIN_APPROVED');
    if (!updatedClaim) return res.status(404).json({ error: 'Claim not found' });
    res.status(200).json({ message: 'Claim approved by admin', data: updatedClaim });
  } catch (error) {
    console.error('❌ Error final approving claim:', error.message);
    res.status(500).json({ error: 'Server error while approving claim' });
  }
};

// PUT /api/claims/:id/admin-reject
exports.adminReject = async (req, res) => {
  try {
    const { adminRejectionReason } = req.body;
    if (!adminRejectionReason || adminRejectionReason.trim() === '') {
      return res.status(400).json({ error: 'Admin rejection reason is required' });
    }

    const updatedClaim = await claimService.updateAdminStatus(req.params.id, 'ADMIN_REJECTED', adminRejectionReason);
    if (!updatedClaim) return res.status(404).json({ error: 'Claim not found' });
    res.status(200).json({ message: 'Claim rejected by admin', data: updatedClaim });
  } catch (error) {
    console.error('❌ Error final rejecting claim:', error.message);
    res.status(500).json({ error: 'Server error while rejecting claim' });
  }
};
